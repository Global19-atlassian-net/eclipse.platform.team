/*******************************************************************************
 * Copyright (c) 2000, 2003 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials 
 * are made available under the terms of the Common Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/cpl-v10.html
 * 
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
package org.eclipse.team.core.subscribers;

import org.eclipse.core.runtime.IProgressMonitor;

/**
 * Classes which implement this interface provide methods that deal with the
 * change events that are generated by a {@link SyncInfoSet}.
 * <p>
 * After creating an instance of a class that implements this interface it can
 * be added to a sync info set using the <code>addSyncSetChangedListener</code>
 * method and removed using the <code>removeSyncSetChangedListener</code>
 * method.
 * </p>
 * The originating sync set may hold modification locks on the sync set to ensure 
 * that no more changes occur until after the current change event is processed.
 * Implementors of this interface must take care not to deadlock on the originating
 * set. 
 * 
 * @see ISyncInfoSetChangeEvent
 * @since 3.0
 */
public interface ISyncInfoSetChangeListener {

	/**
	 * Sent when a {@link SyncInfoSet} changes. For example, when a resource's 
	 * synchronization state changes.
	 * <p>
	 * The originating sync set will be locked for modification while these events are being fired.
	 * Clients should no modify the set, obtain locks or run for a long time within a handler.
	 * 
	 * @param event an event containing information about the change.
	 */
	public void syncSetChanged(ISyncInfoSetChangeEvent event, IProgressMonitor monitor);
}
